"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ
from dotenv import load_dotenv
import dj_database_url

# load env files
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

"""
ALLOWED_HOSTS = ['academyapp-backend-production.up.railway.app', 'cloudflare.com','academy-app.r2.cloudflarestorage.com', 'hooks.stripe.com', 'stripe.com', 'academyapp-backend-production.up.railway.app']

CSRF_TRUSTED_ORIGINS = ['https://academyapp-backend-production.up.railway.app']

CORS_ALLOWED_ORIGINS = [
    "https://academyapp-frontend-production.up.railway.app",  # frontend
    "https://*.cloudflare.com",  # cloudflare
    "https://*.stripe.com",      # stripe
    'https://academy-app.r2.cloudflarestorage.com'
]


"""
ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = ['https://localhost:3000']

CORS_ALLOWED_ORIGINS = [
    '*'      # stripe
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
    'products',
    'user'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = f'https://{os.getenv("S3_BUCKET_NAME")}.r2.cloudflarestorage.com/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#EMAIL settings

# settings.py

# E-Mail Backend (für Entwicklungszwecke)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# E-Mail-Server
EMAIL_HOST = 'smtp.gmail.com'

# E-Mail-Server Port (normalerweise 587 für TLS oder 465 für SSL)
EMAIL_PORT = 587

# E-Mail-Adresse und Passwort
EMAIL_USE_TLS = True  # TLS (Transport Layer Security) aktivieren
EMAIL_HOST_USER = os.getenv('EMAIL_HOST') 
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')  # Dein E-Mail-Passwort oder App-Passwort (bei Gmail)

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

EMAIL_REPLY_TO = EMAIL_HOST_USER



#Media files on cloudflare r2 settings
AWS_ACCESS_KEY_ID = os.getenv('S3_ACCESS_KEY')
AWS_SECRET_ACCESS_KEY = os.getenv('S3_SECRET_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('S3_NAME')
AWS_S3_ENDPOINT_URL = os.getenv('S3_ENDPOINT')

#using r2 for media uploads
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
            'access_key': os.getenv('S3_ACCESS_KEY'),
            'secret_key': os.getenv('S3_SECRET_KEY'),
            'bucket_name': os.getenv('S3_NAME'),
            'endpoint_url': os.getenv('S3_ENDPOINT'),
            'custom_domain': f"{os.getenv('S3_NAME')}.r2.cloudflarestorage.com",
            'region_name': 'auto',  # Falls nötig, nach deinem Setup anpassen
            'signature_version': 's3v4',
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
            'access_key': os.getenv('S3_ACCESS_KEY'),
            'secret_key': os.getenv('S3_SECRET_KEY'),
            'bucket_name': os.getenv('S3_NAME'),
            'endpoint_url': os.getenv('S3_ENDPOINT'),
            'custom_domain': f"{os.getenv('S3_NAME')}.r2.cloudflarestorage.com",
            'region_name': 'auto',
        },
    },
}


MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/' #to access files


#Stripe api key
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Stripe API Key aus der .env-Datei laden
STRIPE_API_KEY = env("STRIPE_API_KEY")
STRIPE_WEBHOOK_SECRET = env("STRIPE_WEBHOOK_SECRET")
